#
# Configure the sections below that apply to your MX target platform
# and EPICS architecture.
#
# The MX architectures currently supported by the 'epics' module include:
#
#   cygwin, linux, macosx, solaris, solaris-gcc, win32
#

# WARNING: Do not start any lines in this file with a <TAB> or ^-I character
#          since this may make GNU Make think that line is part of a recipe.

#--------------------------------------------------------------------------

# Cygwin configuration

ifeq ($(MX_ARCH),cygwin)
    EPICS_ARCH	= cygwin-x86

    EPICS_BASE	= /opt/epics/base
    #EPICS_BASE	= /cygdrive/c/opt/epics/R3.14.10/base

    EPICS_INCLUDES	= -Wno-shadow -I$(EPICS_BASE)/include \
        		-I$(EPICS_BASE)/include/os/cygwin32
    EPICS_LIB_DIRS	= -L$(EPICS_BASE)/lib/$(EPICS_ARCH)
    EPICS_LIBRARIES	= -lca -lCom
endif

#--------------------------------------------------------------------------

# Linux configuration

ifeq ($(MX_ARCH),linux)

    # Select between
    # 1.  Install from source
    # 2.  Install NSLS-II EPICS Debian packages
    # 3.  Install IIT EPICS Debian packages

    #EPICS_DIST = source
    #EPICS_DIST = nsls
    EPICS_DIST = iit

    #
    # You can explicitly define EPICS_ARCH here if you really need to, but
    # it is normally better to let automatic configuration do the work.
    #

    #EPICS_ARCH	= linux-x86-debug	# For EPICS 3.14
    #EPICS_ARCH	= linux-x86_64-debug	# For EPICS 3.14

    ifndef EPICS_ARCH

        #
        # Warning: The following autoconfigure logic has only been tested
        # for EPICS 3.14.  It will not work for EPICS 3.13, but that is
        # not supported by MX anymore.
        #

        _uname_machine := $(shell uname -m )

        ifeq ($(_uname_machine),x86_64)
            EPICS_ARCH = linux-x86_64
        endif
        ifeq ($(_uname_machine),i686)
            EPICS_ARCH = linux-x86
        endif
        ifeq ($(_uname_machine),i386)
            EPICS_ARCH = linux-x86
        endif
        ifeq ($(_uname_machine),ppc)
            EPICS_ARCH = linux-ppc
        endif

        ifndef EPICS_ARCH
            $(info: Could not automatically configure the EPICS_ARCH variable.)
        endif

        $(warning *** Building for EPICS_ARCH = $(EPICS_ARCH) ***)

    endif

    MX_EPICS_CFLAGS = $(CFLAGS) -Wno-strict-prototypes \
        				-Wno-cast-qual -Wno-shadow

    # Compile from source code

    ifeq ($(EPICS_DIST),source)
        EPICS_BASE	= /opt/epics/base
        #EPICS_BASE	= /opt/EPICS/base
        #EPICS_BASE	= /mnt/epics/base
        #EPICS_BASE	= /usr/local/epics/base
        #EPICS_BASE	= /home/lavender/local/opt/epics/base
        #EPICS_BASE	= /home1/daly/epics/base
        #EPICS_BASE	= /local/DPbin/epics/epics_2013-04-23/base-3.14.12.3

        EPICS_INCLUDES	= -Wno-shadow -I$(EPICS_BASE)/include \
        			-I$(EPICS_BASE)/include/os/Linux
        EPICS_LIB_DIRS	= -L$(EPICS_BASE)/lib/$(EPICS_ARCH)
        EPICS_LIBRARIES = -lca -lCom
    endif

    # NSLS-II EPICS Debian packages from http://epics.nsls2.bnl.gov/debian/

    ifeq ($(EPICS_DIST),nsls)
        EPICS_INCLUDES  = -Wno-shadow -I/usr/lib/epics/include \
        			-I/usr/lib/epics/include/os/Linux
        EPICS_LIB_DIRS  = -L/usr/lib/epics/lib/$(EPICS_ARCH)
        EPICS_LIBRARIES = -lca -lCom
    endif

    # IIT's EPICS Debian packages from http://debian-xray.iit.edu/

    ifeq ($(EPICS_DIST),iit)
        EPICS_INCLUDES  = -Wno-shadow -I/usr/include/epics \
        			-I/usr/include/epics/os/Linux
        EPICS_LIB_DIRS  = 
        EPICS_LIBRARIES = -lca -lCom
    endif

endif

#--------------------------------------------------------------------------

# MacOS X configuration

ifeq ($(MX_ARCH),macosx)
    EPICS_ARCH	= darwin-x86
    #EPICS_ARCH	= darwin-ppc

    MX_EPICS_CFLAGS = $(CFLAGS)

    EPICS_BASE	= /opt/epics/base

    EPICS_INCLUDES = -I$(EPICS_BASE)/include \
        			-I$(EPICS_BASE)/include/os/Darwin
    EPICS_LIB_DIRS = -L$(EPICS_BASE)/lib/$(EPICS_ARCH)
    EPICS_LIBRARIES = -lca -lCom
endif

#--------------------------------------------------------------------------

# Solaris configuration

ifeq ($(MX_ARCH),solaris)
    EPICS_ARCH	= solaris-sparc
    #EPICS_ARCH	= solaris-x86

    #EPICS_BASE	= /opt/epics/base
    #EPICS_BASE	= /usr/local/epics/base
    EPICS_BASE	= /filer/Data/epicsUIC/base

    EPICS_INCLUDES = -I$(EPICS_BASE)/include \
        			-I$(EPICS_BASE)/include/os/solaris
    EPICS_LIB_DIRS = -L$(EPICS_BASE)/lib/$(EPICS_ARCH)
    EPICS_LIBRARIES = -lca -lCom
endif

#--------------------------------------------------------------------------

# Solaris GCC configuration

ifeq ($(MX_ARCH),solaris-gcc)
    EPICS_ARCH	= solaris-sparc-gnu
    #EPICS_ARCH	= solaris-x86-gnu

    EPICS_BASE	= /opt/epics/base

    EPICS_INCLUDES = -I$(EPICS_BASE)/include \
        			-I$(EPICS_BASE)/include/os/solaris
    EPICS_LIB_DIRS = -L$(EPICS_BASE)/lib/$(EPICS_ARCH)
    EPICS_LIBRARIES = -lca -lCom
endif

#--------------------------------------------------------------------------

# Win32 configuration

ifeq ($(MX_ARCH),win32)
    #EPICS_ARCH	= win32-x86
    EPICS_ARCH	= windows-x64

    MX_EPICS_CFLAGS = $(CFLAGS)

    EPICS_BASE	= c:\\opt\\epics\\base-3.14.12.3
    #EPICS_BASE	= c:\\opt\\epics\\base-3-14-11
    #EPICS_BASE	= d:\\opt\\epics\\base-3.14.12

    EPICS_INCLUDES = -I$(EPICS_BASE)\\include \
        			-I$(EPICS_BASE)\\include\\os\\WIN32
    EPICS_LIBS = $(EPICS_BASE)\\lib\\$(EPICS_ARCH)\\ca.lib \
        			$(EPICS_BASE)\\lib\\$(EPICS_ARCH)\\Com.lib
endif

#--------------------------------------------------------------------------

