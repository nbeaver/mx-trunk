*** XPS_C8_drivers.cpp.orig	2019-11-05 09:20:11.569353589 -0800
--- XPS_C8_drivers.cpp	2019-11-05 09:30:12.430816660 -0800
***************
*** 16,36 ****
  	#define DLL 
  #endif
  
! #include "xps_c8_drivers.h" 
  
  #define SIZE_SMALL 1024
  #define SIZE_NOMINAL 1024
  #define SIZE_BIG 2048
  #define SIZE_HUGE 65536
  
! #define SIZE_EXECUTE_METHOD 1024
  
  #define SIZE_NAME    100
  #ifdef __cplusplus
  extern "C"
  {
  #else
! #typedef int bool;  /* C does not know bool, only C++ */
  #endif
  
  #define DLL_VERSION "Library version for XPS-C8 Firmware V2.6.x"
--- 16,36 ----
  	#define DLL 
  #endif
  
! #include "XPS_C8_drivers.h" 
  
  #define SIZE_SMALL 1024
  #define SIZE_NOMINAL 1024
  #define SIZE_BIG 2048
  #define SIZE_HUGE 65536
  
! #define SIZE_EXECUTE_METHOD 1024
  
  #define SIZE_NAME    100
  #ifdef __cplusplus
  extern "C"
  {
  #else
! typedef int bool;  /* C does not know bool, only C++ */
  #endif
  
  #define DLL_VERSION "Library version for XPS-C8 Firmware V2.6.x"
***************
*** 56,62 ****
  	return (GetError(SocketIndex));
  }
  /***********************************************************************/
! char * __stdcall GetLibraryVersion(void) 
  {
  	return (DLL_VERSION);
  }
--- 56,62 ----
  	return (GetError(SocketIndex));
  }
  /***********************************************************************/
! const char * __stdcall GetLibraryVersion(void) 
  {
  	return (DLL_VERSION);
  }
***************
*** 7063,7072 ****
  		ptNext = NULL;
  		if (pt != NULL) pt = strchr (pt, ',');
  		if (pt != NULL) pt++;
! 		if (pt != NULL) sscanf (pt, "%d", DACOffset1);
  		if (pt != NULL) pt = strchr (pt, ',');
  		if (pt != NULL) pt++;
! 		if (pt != NULL) sscanf (pt, "%d", DACOffset2);
  	} 
  	if (NULL != ReturnedValue)
  		free (ReturnedValue);
--- 7063,7072 ----
  		ptNext = NULL;
  		if (pt != NULL) pt = strchr (pt, ',');
  		if (pt != NULL) pt++;
! 		if (pt != NULL) sscanf (pt, "%hd", DACOffset1);
  		if (pt != NULL) pt = strchr (pt, ',');
  		if (pt != NULL) pt++;
! 		if (pt != NULL) sscanf (pt, "%hd", DACOffset2);
  	} 
  	if (NULL != ReturnedValue)
  		free (ReturnedValue);
***************
*** 7147,7162 ****
  		ptNext = NULL;
  		if (pt != NULL) pt = strchr (pt, ',');
  		if (pt != NULL) pt++;
! 		if (pt != NULL) sscanf (pt, "%d", PrimaryDACOffset1);
  		if (pt != NULL) pt = strchr (pt, ',');
  		if (pt != NULL) pt++;
! 		if (pt != NULL) sscanf (pt, "%d", PrimaryDACOffset2);
  		if (pt != NULL) pt = strchr (pt, ',');
  		if (pt != NULL) pt++;
! 		if (pt != NULL) sscanf (pt, "%d", SecondaryDACOffset1);
  		if (pt != NULL) pt = strchr (pt, ',');
  		if (pt != NULL) pt++;
! 		if (pt != NULL) sscanf (pt, "%d", SecondaryDACOffset2);
  	} 
  	if (NULL != ReturnedValue)
  		free (ReturnedValue);
--- 7147,7162 ----
  		ptNext = NULL;
  		if (pt != NULL) pt = strchr (pt, ',');
  		if (pt != NULL) pt++;
! 		if (pt != NULL) sscanf (pt, "%hd", PrimaryDACOffset1);
  		if (pt != NULL) pt = strchr (pt, ',');
  		if (pt != NULL) pt++;
! 		if (pt != NULL) sscanf (pt, "%hd", PrimaryDACOffset2);
  		if (pt != NULL) pt = strchr (pt, ',');
  		if (pt != NULL) pt++;
! 		if (pt != NULL) sscanf (pt, "%hd", SecondaryDACOffset1);
  		if (pt != NULL) pt = strchr (pt, ',');
  		if (pt != NULL) pt++;
! 		if (pt != NULL) sscanf (pt, "%hd", SecondaryDACOffset2);
  	} 
  	if (NULL != ReturnedValue)
  		free (ReturnedValue);
